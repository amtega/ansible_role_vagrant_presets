- hosts: all
  vars:
    ansible_become: true
    ansible_become_method: sudo
  tasks:
    - block:
        - name: Install required packages
          package:
            name: "{{ packages }}"
            state: present
          register: packages_install_result
          until: packages_install_result is succeeded
          retries: 5
          delay: 3
          vars:
            packages:
              - python2
              - libselinux-python
              - xauth
              - yum

        - name: Setup root user
          user:
            name: root
            shell: /bin/bash
            group: root
            password: >-
              {{ "root"
                 | password_hash('sha512', 100000000000 | random | string) }}

        - name: Enable sshd password authentication
          lineinfile:
            path: /etc/ssh/sshd_config
            regexp: "^PasswordAuthentication no"
            line: "PasswordAuthentication yes"
            state: present
          register: enable_password_auth_result

        - name: Reload sshd
          service:
            name: sshd
            state: reloaded
          when: enable_password_auth_result is changed

        # Recreate structure of /usr/share/locale. Given that ansible package
        # modules does not support reinstall mode, the workaround here is to
        # call yum directly

        - name: Reinstall filesystem package
          shell: "yum reinstall filesystem -y"
          args:
            warn: false
          register: reinstall_filesystem_result
          failed_when: not reinstall_filesystem_result.rc == 0

        - name: Upgrade all packages
          package:
            name: "*"
            state: latest

        - name: Clean yum cache
          shell: yum clean all
          args:
            warn: false

        - name: Clear bash history
          shell: "cat /dev/null > ~/.bash_history"

      environment:
        http_proxy: "{{ ansible_facts.env.http_proxy | default('') }}"
        https_proxy: "{{ ansible_facts.env.https_proxy | default('') }}"
        no_proxy: "{{ ansible_facts.env.no_proxy | default('') }}"
